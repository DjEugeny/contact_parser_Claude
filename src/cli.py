import argparse
from datetime import datetime, date, timedelta

def parse_dates(from_date, to_date):
    """–ü–∞—Ä—Å–∏–Ω–≥ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞—Ç"""
    
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–∞—Ç
    if not from_date:
        yesterday = date.today() - timedelta(days=1)
        from_date = yesterday.strftime("%Y-%m-%d")
    
    if not to_date:
        to_date = from_date
    
    try:
        start_date = datetime.strptime(from_date, "%Y-%m-%d").date()
        end_date = datetime.strptime(to_date, "%Y-%m-%d").date()
    except ValueError:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ YYYY-MM-DD")
        exit(1)
    
    if start_date > end_date:
        print("‚ùå –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–∑–∂–µ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è")
        exit(1)
    
    return from_date, to_date

def main():
    parser = argparse.ArgumentParser(description="–ü–∞—Ä—Å–µ—Ä –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –∏–∑ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–æ—á—Ç—ã")
    
    parser.add_argument(
        '--from-date', 
        help='–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: –≤—á–µ—Ä–∞)'
    )
    parser.add_argument(
        '--to-date', 
        help='–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: —Ä–∞–≤–Ω–∞ from-date)'
    )
    parser.add_argument(
        '--debug', 
        action='store_true', 
        help='–í–∫–ª—é—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ'
    )
    
    args = parser.parse_args()
    
    from_date, to_date = parse_dates(args.from_date, args.to_date)
    
    print(f"üöÄ –ü–∞—Ä—Å–∏–Ω–≥ –ø–∏—Å–µ–º —Å {from_date} –ø–æ {to_date}")
    print(f"üìä –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏: {'–≤–∫–ª—é—á–µ–Ω' if args.debug else '–≤—ã–∫–ª—é—á–µ–Ω'}")
    print("‚úÖ CLI —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")

if __name__ == "__main__":
    main()
